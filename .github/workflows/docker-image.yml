name: Publish Docker Image

on:
  push:
    tags:
      - v*
  workflow_dispatch:
    inputs:
      reason:
        description: '发布原因'
        required: false
      version:
        description: '版本号 (例如: v1.0.0)'
        required: true
        default: 'latest'

jobs:
  push_to_registry:
    name: 构建并推送 Docker 镜像
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4.2.2
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: 设置 Docker Buildx
      uses: docker/setup-buildx-action@v3.7.1
    
    - name: 登录 Docker Hub
      uses: docker/login-action@v3.3.0
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: 登录 GitHub Container Registry
      uses: docker/login-action@v3.3.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: 提取 Docker 元数据
      id: meta
      uses: docker/metadata-action@v5.5.1
      with:
        images: |
          ysmintor/pieces-os-go
          ghcr.io/${{ github.repository }}
        tags: |
          type=raw,value=${{ github.event.inputs.version || github.ref_name }}
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
    
    - name: 构建并推送
      uses: docker/build-push-action@v6.9.0
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          VERSION=${{ github.event.inputs.version || github.ref_name }}
          BUILD_TIME=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
